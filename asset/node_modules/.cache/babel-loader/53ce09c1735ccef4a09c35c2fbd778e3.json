{"ast":null,"code":"var _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/hoc/auth.js\";\nimport React, { useEffect } from 'react';\nimport { auth } from '../actions/userActions';\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function (ComposedClass, reload, adminRoute = null) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user); // const dispatch = useDispatch();\n\n    useEffect(() => {\n      // dispatch(auth()).then(async response => {\n      console.log(auth); // if (await !response.payload.isAuth) {\n      //     if (reload) {\n      //         props.history.push('/login')\n      //     }\n      // } else {\n      //     if (adminRoute && !response.payload.isAdmin) {\n      //         props.history.push('/')\n      //     }\n      //     else {\n      //         if (reload === false) {\n      //             props.history.push('/')\n      //         }\n      //     }\n      // }\n      // })\n    }, [dispatch, props.history, user.googleAuth]);\n    return React.createElement(ComposedClass, Object.assign({}, props, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  return AuthenticationCheck;\n}","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","ComposedClass","reload","adminRoute","AuthenticationCheck","props","user","state","console","log","dispatch","history","googleAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,UAAUC,aAAV,EAAyBC,MAAzB,EAAiCC,UAAU,GAAG,IAA9C,EAAoD;AAC/D,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAEhC,QAAIC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAtB,CAFgC,CAGhC;;AAEAT,IAAAA,SAAS,CAAC,MAAM;AAEZ;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAHQ,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEH,KApBQ,EAoBN,CAACY,QAAD,EAAWL,KAAK,CAACM,OAAjB,EAA0BL,IAAI,CAACM,UAA/B,CApBM,CAAT;AAsBA,WACI,oBAAC,aAAD,oBAAmBP,KAAnB;AAA0B,MAAA,IAAI,EAAEC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AACD,SAAOF,mBAAP;AACH","sourcesContent":["import React, { useEffect } from 'react';\nimport { auth } from '../actions/userActions'\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        // const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            // dispatch(auth()).then(async response => {\n                console.log(auth)\n                // if (await !response.payload.isAuth) {\n                //     if (reload) {\n                //         props.history.push('/login')\n                //     }\n                // } else {\n                //     if (adminRoute && !response.payload.isAdmin) {\n                //         props.history.push('/')\n                //     }\n                //     else {\n                //         if (reload === false) {\n                //             props.history.push('/')\n                //         }\n                //     }\n                // }\n            // })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n"]},"metadata":{},"sourceType":"module"}