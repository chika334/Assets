{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADMIN_USER } from './types';\nimport axios from 'axios';\nexport function register(user) {\n  const request = axios.post('/api/users', user).then(response => response.data);\n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport const login = user => {\n  return dispatch => {\n    return fetch(\"http://localhost:5000/api/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        console.log(\"error\");\n      } else {\n        localStorage.setItem('token', data.jwt);\n        dispatch(loginUser(data.user));\n      }\n    });\n  }; // const request = axios.post('http://localhost:5000/api/login', user)\n  //   .then(response => response.data)\n  // return {\n  //   type: LOGIN_USER,\n  //   payload: request\n  // } \n};\n\nconst loginUser = userObj => ({\n  type: LOGIN_USER,\n  payload: userObj\n});\n\nexport function auth() {\n  const request = axios.get('http://localhost:5000/api/users/auth').then(response => response.data);\n  return {\n    type: AUTH_USER,\n    payload: request\n  };\n}\nexport function admin() {\n  const request = axios.get(\"http://localhost:5000/api/users/auth\").then(response => response.data);\n  return {\n    type: ADMIN_USER,\n    payload: request\n  };\n}\nexport function logoutUser() {\n  const request = axios.get(\"http://localhost:5000/api/users/logout\").then(response => response.data);\n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/actions/userActions.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADMIN_USER","axios","register","user","request","post","then","response","data","type","payload","login","dispatch","fetch","method","headers","Accept","body","JSON","stringify","json","message","console","log","localStorage","setItem","jwt","loginUser","userObj","auth","get","admin","logoutUser"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,aAApB,EAAmCC,SAAnC,EAA8CC,WAA9C,EAA2DC,UAA3D,QAA4E,SAA5E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,QAAMC,OAAO,GAAGH,KAAK,CAACI,IAAN,CAAW,YAAX,EAAyBF,IAAzB,EACbG,IADa,CACRC,QAAQ,IAAIA,QAAQ,CAACC,IADb,CAAhB;AAGA,SAAO;AACLC,IAAAA,IAAI,EAAEZ,aADD;AAELa,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID;AAED,OAAO,MAAMO,KAAK,GAAGR,IAAI,IAAI;AAC3B,SAAOS,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,iCAAD,EAAoC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFqC;AAM9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAChB,QAAAA;AAAD,OAAf;AANwC,KAApC,CAAL,CAQNG,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACa,IAAT,EARX,EASNd,IATM,CASDE,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACa,OAAR,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,GAAnC;AACAd,QAAAA,QAAQ,CAACe,SAAS,CAACnB,IAAI,CAACL,IAAN,CAAV,CAAR;AACD;AACF,KAhBM,CAAP;AAiBD,GAlBD,CAD2B,CAsB3B;AACA;AAEA;AACA;AACA;AACA;AACD,CA7BM;;AA8BP,MAAMwB,SAAS,GAAGC,OAAO,KAAK;AAC5BnB,EAAAA,IAAI,EAAEb,UADsB;AAE5Bc,EAAAA,OAAO,EAAEkB;AAFmB,CAAL,CAAzB;;AAKA,OAAO,SAASC,IAAT,GAAe;AACpB,QAAMzB,OAAO,GAAGH,KAAK,CAAC6B,GAAN,CAAU,sCAAV,EACfxB,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IADX,CAAhB;AAGA,SAAO;AACLC,IAAAA,IAAI,EAAEX,SADD;AAELY,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID;AAED,OAAO,SAAS2B,KAAT,GAAgB;AACrB,QAAM3B,OAAO,GAAGH,KAAK,CAAC6B,GAAN,yCACfxB,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IADX,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAET,UADH;AAEHU,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAID;AAED,OAAO,SAAS4B,UAAT,GAAqB;AAC1B,QAAM5B,OAAO,GAAGH,KAAK,CAAC6B,GAAN,2CACfxB,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IADX,CAAhB;AAGA,SAAO;AACHC,IAAAA,IAAI,EAAEV,WADH;AAEHW,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAID","sourcesContent":["import {LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADMIN_USER} from './types';\nimport axios from 'axios';\n\nexport function register(user) {\n  const request = axios.post('/api/users', user)\n    .then(response => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request\n  }\n}\n\nexport const login = user => {\n  return dispatch => {\n    return fetch(\"http://localhost:5000/api/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(data.message) {\n        console.log(\"error\");\n      } else {\n        localStorage.setItem('token', data.jwt)\n        dispatch(loginUser(data.user))\n      }\n    })\n  }\n\n  \n  // const request = axios.post('http://localhost:5000/api/login', user)\n  //   .then(response => response.data)\n\n  // return {\n  //   type: LOGIN_USER,\n  //   payload: request\n  // } \n}\nconst loginUser = userObj => ({\n  type: LOGIN_USER,\n  payload: userObj\n})\n\nexport function auth(){\n  const request = axios.get('http://localhost:5000/api/users/auth')\n  .then(response => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request\n  }\n}\n\nexport function admin(){\n  const request = axios.get(`http://localhost:5000/api/users/auth`)\n  .then(response => response.data);\n\n  return {\n      type: ADMIN_USER,\n      payload: request\n  }\n}\n\nexport function logoutUser(){\n  const request = axios.get(`http://localhost:5000/api/users/logout`)\n  .then(response => response.data);\n\n  return {\n      type: LOGOUT_USER,\n      payload: request\n  }\n}\n"]},"metadata":{},"sourceType":"module"}