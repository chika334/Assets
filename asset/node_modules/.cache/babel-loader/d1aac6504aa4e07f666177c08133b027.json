{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nexport default (function (resource, options) {\n  return function (Component) {\n    return function (_React$Component) {\n      _inherits(FetchHOC, _React$Component);\n\n      function FetchHOC() {\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, FetchHOC);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getUrl = function () {\n          var url = resource;\n\n          if (typeof resource === 'function') {\n            url = resource(_this.props);\n          }\n\n          return url;\n        }, _this.state = {\n          // Ensure only truthy URLs start off as loading (#3)\n          loading: !!_this.getUrl(),\n          success: undefined,\n          error: undefined\n        }, _this.prevUrl = _this.getUrl(), _this.componentDidMount = function () {\n          _this._isMounted = true;\n\n          _this.fetchData(_this.getUrl());\n        }, _this.fetchData = function (url) {\n          if (!url) return; // About to start fetching, set loading state\n\n          _this.setState(function () {\n            return {\n              loading: true,\n              success: undefined,\n              error: undefined,\n              response: undefined\n            };\n          });\n\n          var init = _extends({\n            credentials: 'same-origin'\n          }, options);\n\n          var response = void 0;\n          fetch(url, init).then(function (result) {\n            response = result.clone();\n            return result.text();\n          }).then(function (data) {\n            try {\n              data = JSON.parse(data);\n            } catch (e) {// Not JSON\n            }\n\n            if (!_this._isMounted) return;\n\n            if (response.status >= 400 && response.status <= 599) {\n              _this.setState(function () {\n                return {\n                  data: data,\n                  error: new Error(response.statusText),\n                  loading: false,\n                  success: false,\n                  response: response\n                };\n              });\n\n              return;\n            }\n\n            _this.setState(function () {\n              return {\n                data: data,\n                loading: false,\n                success: true,\n                response: response\n              };\n            });\n          }).catch(function (error) {\n            if (!_this._isMounted) return;\n\n            _this.setState(function () {\n              return {\n                error: error,\n                loading: false,\n                success: false,\n                response: response\n              };\n            });\n          });\n        }, _this.urlHasChanged = function () {\n          if (typeof resource !== 'function') {\n            return _this.prevUrl !== resource;\n          }\n\n          var currentUrl = resource(_this.props);\n\n          if (_this.prevUrl !== currentUrl) {\n            _this.prevUrl = currentUrl;\n            return true;\n          }\n\n          return false;\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      FetchHOC.prototype.componentDidUpdate = function componentDidUpdate() {\n        if (typeof resource === 'function' && this.urlHasChanged()) {\n          this.fetchData(this.getUrl());\n        }\n      };\n\n      FetchHOC.prototype.componentWillUnmount = function componentWillUnmount() {\n        this._isMounted = false;\n      };\n\n      FetchHOC.prototype.render = function render() {\n        return React.createElement(Component, _extends({}, this.props, this.state));\n      };\n\n      return FetchHOC;\n    }(React.Component);\n  };\n});","map":null,"metadata":{},"sourceType":"module"}