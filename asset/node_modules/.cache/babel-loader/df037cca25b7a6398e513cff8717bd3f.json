{"ast":null,"code":"import { ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE } from '../actions/types';\nimport shortid from 'shortid';\nimport findIndex from 'lodash/findIndex';\nexport default ((state = [], action = {}) => {\n  switch (action.types) {\n    case ADD_FLASH_MESSAGE:\n      return [...state, {\n        id: shortid.generate(),\n        type: action.message.type,\n        text: action.message.text\n      }];\n\n    case DELETE_FLASH_MESSAGE:\n      const index = findIndex(state, {\n        id: action.id\n      });\n\n      if (index >= 0) {\n        return [...state.slice(0, index), ...state.slice(index + 1)];\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/reducers/flashMessages.js"],"names":["ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","shortid","findIndex","state","action","types","id","generate","type","message","text","index","slice"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,oBAA3B,QAAsD,kBAAtD;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAM,GAAG,EAAtB,KAA6B;AAC1C,UAAOA,MAAM,CAACC,KAAd;AACE,SAAKN,iBAAL;AACE,aAAO,CACL,GAAGI,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEL,OAAO,CAACM,QAAR,EADN;AAEEC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD,IAFvB;AAGEE,QAAAA,IAAI,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAHvB,OAFK,CAAP;;AAQF,SAAKV,oBAAL;AACE,YAAMW,KAAK,GAAGT,SAAS,CAACC,KAAD,EAAQ;AAAEG,QAAAA,EAAE,EAAEF,MAAM,CAACE;AAAb,OAAR,CAAvB;;AACA,UAAIK,KAAK,IAAI,CAAb,EAAgB;AACd,eAAO,CACL,GAAGR,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeD,KAAf,CADE,EAEL,GAAGR,KAAK,CAACS,KAAN,CAAYD,KAAK,GAAG,CAApB,CAFE,CAAP;AAID;;AACD,aAAOR,KAAP;;AACF;AACE,aAAOA,KAAP;AApBJ;AAsBD,CAvBD","sourcesContent":["import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from '../actions/types';\nimport shortid from 'shortid';\nimport findIndex from 'lodash/findIndex';\n\nexport default (state = [], action = {}) => {\n  switch(action.types) {\n    case ADD_FLASH_MESSAGE: \n      return [\n        ...state,\n        {\n          id: shortid.generate(),\n          type: action.message.type,\n          text: action.message.text\n        }\n      ];\n    case DELETE_FLASH_MESSAGE:\n      const index = findIndex(state, { id: action.id });\n      if (index >= 0) {\n        return [\n          ...state.slice(0, index),\n          ...state.slice(index + 1)\n        ];\n      }\n      return state;\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}