{"ast":null,"code":"var _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'; // import Reducer from './reducers';\n\nimport rootReducer from './rootReducer';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport thunk from 'redux-thunk'; // import Form from '../src/pages/Form';\n\nimport setAuthorizationToken from './utils/setAuthorizationToken';\nimport jwtDecode from 'jwt-decode';\nimport { setCurrentUser } from './actions/authActions'; // const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f));\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n}\n\nReactDOM.render(React.createElement(Provider // \t store={createStoreWithMiddleware(\n// \t\tReducer,\n// \t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n// \t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\n// )}\n, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Router","rootReducer","Provider","createStore","applyMiddleware","compose","promiseMiddleware","thunk","setAuthorizationToken","jwtDecode","setCurrentUser","store","window","devToolsExtension","f","localStorage","jwtToken","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAO,sCAAP;AACA,OAAO,uCAAP,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CAEA;;AAEA,MAAMC,KAAK,GAAGR,WAAW,CACvBF,WADuB,EAEvBI,OAAO,CACLD,eAAe,CAACG,KAAD,CADV,EAELK,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwDC,CAAC,IAAIA,CAFxD,CAFgB,CAAzB;;AAQA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzBR,EAAAA,qBAAqB,CAACO,YAAY,CAACC,QAAd,CAArB;AACAL,EAAAA,KAAK,CAACM,QAAN,CAAeP,cAAc,CAACD,SAAS,CAACM,YAAY,CAACC,QAAd,CAAV,CAA7B;AACD;;AAEDpB,QAAQ,CAACsB,MAAT,CACA,oBAAC,QAAD,CACA;AACA;AACA;AACA;AACA;AALA;AAMA,EAAA,KAAK,EAAEP,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CARD,CADA,EAaEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAbF,E,CAeA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n// import Reducer from './reducers';\nimport rootReducer from './rootReducer';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport thunk from 'redux-thunk';\n// import Form from '../src/pages/Form';\nimport setAuthorizationToken from './utils/setAuthorizationToken';\nimport jwtDecode from 'jwt-decode';\nimport { setCurrentUser } from './actions/authActions';\n\n// const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n);\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n}\n\nReactDOM.render(\n<Provider\n// \t store={createStoreWithMiddleware(\n// \t\tReducer,\n// \t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\n// \t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\n// )}\nstore={store}\n>\n\t<Router>\n\t\t<App />    \n\t</Router>\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}