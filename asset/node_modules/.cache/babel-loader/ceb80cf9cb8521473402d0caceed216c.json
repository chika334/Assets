{"ast":null,"code":"import _defineProperty from \"/home/freshaluck/Downloads/new/askgo/assets/asset/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/freshaluck/Downloads/new/askgo/assets/asset/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport images from '../images/images.jpeg';\nimport side from '../images/side.png';\nimport { login } from '../actions/authActions';\nimport { connect } from 'react-redux';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isLoading: false,\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      setFormErrorMessage: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e, props) {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      // const {login} = this.props\n      // const user = {\n      //   email: this.state.email,\n      //   password: this.state.password\n      // }\n      // login(user).then((response) => {\n      //   if(response.payload) {\n      //     // console.log(this.props.user)\n      //     this.props.history.push('/profile');\n      //   }\n      this.setState({\n        isLoading: true\n      });\n      this.props.login(this.state).then(res => this.context.router.push('/'), err => this.setState({\n        isLoading: false\n      }));\n    } // )\n\n  } // }\n\n\n  handleChange(e) {\n    e.preventDefault();\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    let formErrors = _objectSpread({}, this.state.formErrors);\n\n    switch (name) {\n      case \"email\":\n        formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n        break;\n\n      case \"password\":\n        formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    });\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: images,\n      className: \"backside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: side,\n      className: \"sideimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Create Account\"))))))));\n  }\n\n} // const mapStateToProps = (state, ownProps) => {\n//   const userDetails = ownProps.history.action ? state.user.loginSuccess : \"error\"\n//   // console.log(userDetails)\n//   return {\n//     user: userDetails\n//   }\n// }\n\n\nLogin.propTypes = {\n  login: React.PropTypes.func.isRequired\n};\nLogin.contextTypes = {\n  router: React.PropTypes.object.isRequired\n}; // export default connect(mapStateToProps, {login})(Login);\n\nexport default connect(null, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Login.js"],"names":["React","images","side","login","connect","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Login","Component","constructor","props","state","email","password","isLoading","setFormErrorMessage","handleChange","bind","handleSubmit","e","preventDefault","setState","then","res","context","router","push","err","target","name","value","test","render","propTypes","PropTypes","func","isRequired","contextTypes","object"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAAQC,KAAR,QAAoB,wBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,UAAU,GAAGC,MAAM,CACrB,sEADqB,CAAzB;;AAIE,MAAMC,SAAS,GAAG,UAA6B;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAXC,IAAW;;AAC7C,MAAIC,KAAK,GAAG,IAAZ,CAD6C,CAG7C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,UAAd,EAA0BK,OAA1B,CAAkCC,GAAG,IAAI;AACvCA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B;AACD,GAFD,EAJ6C,CAQ7C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4BC,GAAG,IAAI;AACjCA,IAAAA,GAAG,KAAK,IAAR,KAAiBJ,KAAK,GAAG,KAAzB;AACD,GAFD;AAIA,SAAOA,KAAP;AACD,CAdD;;AAgBF,MAAMM,KAAN,SAAoBhB,KAAK,CAACiB,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,SAAS,EAAE,KAHA;AAIXf,MAAAA,UAAU,EAAE;AACVa,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,QAAQ,EAAE;AAFA,OAJD;AAQXE,MAAAA,mBAAmB,EAAE;AARV,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAIT,KAAJ,EAAU;AACpBS,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGtB,SAAS,CAAC,KAAKa,KAAN,CAAZ,EAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,WAAKU,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,WAAKJ,KAAL,CAAWhB,KAAX,CAAiB,KAAKiB,KAAtB,EAA6BW,IAA7B,CACGC,GAAD,IAAS,KAAKC,OAAL,CAAaC,MAAb,CAAoBC,IAApB,CAAyB,GAAzB,CADX,EAEGC,GAAD,IAAS,KAAKN,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd,CAFX;AAID,KAnBiB,CAoBlB;;AACD,GAvC2B,CAwC9B;;;AAEAE,EAAAA,YAAY,CAAEG,CAAF,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;AADc,sBAEUD,CAAC,CAACS,MAFZ;AAAA,UAENC,IAFM,aAENA,IAFM;AAAA,UAEAC,KAFA,aAEAA,KAFA;;AAGd,QAAI/B,UAAU,qBAAQ,KAAKY,KAAL,CAAWZ,UAAnB,CAAd;;AAEA,YAAQ8B,IAAR;AACE,WAAK,OAAL;AACE9B,QAAAA,UAAU,CAACa,KAAX,GAAmBhB,UAAU,CAACmC,IAAX,CAAgBD,KAAhB,IACf,EADe,GAEf,uBAFJ;AAGA;;AACF,WAAK,UAAL;AACE/B,QAAAA,UAAU,CAACc,QAAX,GACEiB,KAAK,CAACxB,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEA;;AACF;AACE;AAXJ;;AAcA,SAAKe,QAAL,CAAc;AAAEtB,MAAAA,UAAF;AAAc,OAAC8B,IAAD,GAAQC;AAAtB,KAAd;AACD;;AAEHE,EAAAA,MAAM,GAAG;AAAA,UACGjC,UADH,GACkB,KAAKY,KADvB,CACGZ,UADH;AAEL,WACI,0CACA;AAAK,MAAA,GAAG,EAAEP,MAAV;AAAkB,MAAA,SAAS,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAM,MAAA,QAAQ,EAAE,KAAKyB,YAArB;AAAmC,MAAA,UAAU,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AACA,MAAA,SAAS,EAAEnB,UAAU,CAACa,KAAX,CAAiBN,MAAjB,GAA0B,CAA1B,GAA8B,OAA9B,GAAwC,IADnD;AAEA,MAAA,WAAW,EAAC,OAFZ;AAGA,MAAA,IAAI,EAAC,OAHL;AAIA,MAAA,IAAI,EAAC,OAJL;AAKA,MAAA,UAAU,MALV;AAMA,MAAA,QAAQ,EAAE,KAAKU,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAUKjB,UAAU,CAACa,KAAX,CAAiBN,MAAjB,GAA0B,CAA1B,IACD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,UAAU,CAACa,KAA3C,CAXJ,CADA,EAeA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACA,MAAA,SAAS,EAAEb,UAAU,CAACc,QAAX,CAAoBP,MAApB,GAA6B,CAA7B,GAAiC,OAAjC,GAA2C,IADtD;AAEA,MAAA,WAAW,EAAC,UAFZ;AAGA,MAAA,IAAI,EAAC,UAHL;AAIA,MAAA,IAAI,EAAC,UAJL;AAKA,MAAA,UAAU,MALV;AAMA,MAAA,QAAQ,EAAE,KAAKU,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAUKjB,UAAU,CAACc,QAAX,CAAoBP,MAApB,GAA6B,CAA7B,IACD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,UAAU,CAACc,QAA3C,CAXJ,CAfA,EA6BA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CA7BA,CAFJ,CADA,CADA,CAJJ,CAFA,CADJ;AAkDH;;AApH+B,C,CAuHpC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,KAAK,CAAC0B,SAAN,GAAkB;AAChBvC,EAAAA,KAAK,EAAEH,KAAK,CAAC2C,SAAN,CAAgBC,IAAhB,CAAqBC;AADZ,CAAlB;AAIA7B,KAAK,CAAC8B,YAAN,GAAqB;AACnBZ,EAAAA,MAAM,EAAElC,KAAK,CAAC2C,SAAN,CAAgBI,MAAhB,CAAuBF;AADZ,CAArB,C,CAIA;;AACA,eAAezC,OAAO,CAAC,IAAD,EAAO;AAACD,EAAAA;AAAD,CAAP,CAAP,CAAuBa,KAAvB,CAAf","sourcesContent":["import React from 'react';\nimport images from '../images/images.jpeg';\nimport side from '../images/side.png';\nimport {login} from '../actions/authActions';\nimport {connect} from 'react-redux';\n\nconst emailRegex = RegExp(\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  );\n  \n  const formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n  \n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n  \n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n      val === null && (valid = false);\n    });\n  \n    return valid;\n  };\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          email: '',\n          password: '',\n          isLoading: false,\n          formErrors: {\n            email: \"\",\n            password: \"\"\n          },\n          setFormErrorMessage: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n      }\n\n      handleSubmit(e, props){\n        e.preventDefault();\n        if(formValid(this.state)) {\n          // const {login} = this.props\n          // const user = {\n          //   email: this.state.email,\n          //   password: this.state.password\n          // }\n          // login(user).then((response) => {\n          //   if(response.payload) {\n          //     // console.log(this.props.user)\n          //     this.props.history.push('/profile');\n          //   }\n\n            this.setState({ isLoading: true });\n            this.props.login(this.state).then(\n              (res) => this.context.router.push('/'),\n              (err) => this.setState({ isLoading: false })\n            )\n          }\n          // )\n        }\n      // }\n    \n      handleChange (e){\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n    \n        switch (name) {\n          case \"email\":\n            formErrors.email = emailRegex.test(value)\n              ? \"\"\n              : \"invalid email address\";\n            break;\n          case \"password\":\n            formErrors.password =\n              value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n            break;\n          default:\n            break;\n        }\n    \n        this.setState({ formErrors, [name]: value });\n      };\n    \n    render() {\n        const { formErrors } = this.state;\n        return (\n            <>\n            <img src={images} className=\"backside\"/>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <img src={side} className=\"sideimage\"/>\n                </div>\n                <div className=\"column\">\n                <div className=\"wrapper\">\n                <div className=\"form-wrapper\">\n                    <h1>Login</h1>\n                    <form onSubmit={this.handleSubmit} noValidate>\n                    <div className=\"email\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                        className={formErrors.email.length > 0 ? \"error\" : null}\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        name=\"email\"\n                        noValidate\n                        onChange={this.handleChange}\n                        />\n                        {formErrors.email.length > 0 && (\n                        <span className=\"errorMessage\">{formErrors.email}</span>\n                        )}\n                    </div>\n                    <div className=\"password\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                        className={formErrors.password.length > 0 ? \"error\" : null}\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        name=\"password\"\n                        noValidate\n                        onChange={this.handleChange}\n                        />\n                        {formErrors.password.length > 0 && (\n                        <span className=\"errorMessage\">{formErrors.password}</span>\n                        )}\n                    </div>\n                    <div className=\"createAccount\">\n                        <button type=\"submit\">Create Account</button>\n                    </div>\n                    </form>\n                </div>\n                </div>\n            </div>\n            </div>\n        </>\n        )\n    }\n}\n\n// const mapStateToProps = (state, ownProps) => {\n//   const userDetails = ownProps.history.action ? state.user.loginSuccess : \"error\"\n//   // console.log(userDetails)\n//   return {\n//     user: userDetails\n//   }\n// }\nLogin.propTypes = {\n  login: React.PropTypes.func.isRequired\n}\n\nLogin.contextTypes = {\n  router: React.PropTypes.object.isRequired\n}\n\n// export default connect(mapStateToProps, {login})(Login);\nexport default connect(null, {login})(Login);"]},"metadata":{},"sourceType":"module"}