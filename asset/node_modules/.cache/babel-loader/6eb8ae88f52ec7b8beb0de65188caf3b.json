{"ast":null,"code":"import _defineProperty from \"/home/freshaluck/Downloads/new/askgo/assets/asset/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport images from '../images/images.jpeg';\nimport side from '../images/side.png';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../actions/authActions';\nimport { Alert } from 'react-bootstrap';\nimport { clearErrors } from '../actions/errorActions';\nimport { Redirect } from 'react-router-dom';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.SendRedirect = () => {\n      this.props.clearErrors();\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      msg: null,\n      redirect: false,\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      setFormErrorMessage: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // if authenticated redirect\n\n\n    if (isAuthenticated) {\n      this.setState({\n        redirect: true\n      });\n      this.SendRedirect();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    const user = {\n      email,\n      password\n    }; // Attempt to login\n\n    console.log(this.props.login(user));\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    let formErrors = _objectSpread({}, this.state.formErrors);\n\n    switch (name) {\n      case \"email\":\n        formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n        break;\n\n      case \"password\":\n        formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    });\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: images,\n      className: \"backside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: side,\n      className: \"sideimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Login\"), this.state.msg ? React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Login\"))))))));\n  }\n\n}\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(Login);","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Login.js"],"names":["React","Component","images","side","connect","PropTypes","login","Alert","clearErrors","Redirect","emailRegex","RegExp","Login","constructor","props","SendRedirect","state","email","password","msg","redirect","formErrors","setFormErrorMessage","handleChange","bind","handleSubmit","componentDidUpdate","prevProps","error","isAuthenticated","id","setState","e","preventDefault","user","console","log","target","name","value","test","length","render","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport images from '../images/images.jpeg';\nimport side from '../images/side.png';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../actions/authActions';\nimport { Alert } from 'react-bootstrap';\nimport { clearErrors } from '../actions/errorActions';\nimport { Redirect } from 'react-router-dom'\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      msg: null,\n      redirect: false,\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      setFormErrorMessage: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  }\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({ msg: error.msg.msg })\n      } else {\n        this.setState({ msg: null })\n      }\n    }\n\n    // if authenticated redirect\n    if (isAuthenticated) {\n      this.setState({ redirect: true });\n      this.SendRedirect();\n    }\n  }\n\n  SendRedirect = () => {\n    this.props.clearErrors()\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    }\n\n    // Attempt to login\n    console.log(this.props.login(user))\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n    if (this.state.redirect) {\n      return <Redirect to='/profile' />\n    }\n    return (\n      <>\n        <img src={images} className=\"backside\" />\n        <div className=\"row\">\n          <div className=\"column\">\n            <img src={side} className=\"sideimage\" />\n          </div>\n          <div className=\"column\">\n            <div className=\"wrapper\">\n              <div className=\"form-wrapper\">\n                <h1>Login</h1>\n                {this.state.msg ? <Alert variant=\"danger\">{this.state.msg}</Alert> : null}\n                <form onSubmit={this.handleSubmit} noValidate>\n                  <div className=\"email\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      className={formErrors.email.length > 0 ? \"error\" : null}\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.email.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.email}</span>\n                    )}\n                  </div>\n                  <div className=\"password\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      className={formErrors.password.length > 0 ? \"error\" : null}\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.password.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.password}</span>\n                    )}\n                  </div>\n                  <div className=\"createAccount\">\n                    <button type=\"submit\">Login</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n})\n\nexport default connect(mapStateToProps, { login, clearErrors })(Login);"]},"metadata":{},"sourceType":"module"}