{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire(\"bootstrap/dist/css/bootstrap.css\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Pagination = function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    _classCallCheck(this, Pagination);\n\n    var _this = _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call(this, props));\n\n    _this.state = {\n      prevLinks: true,\n      endLinks: true\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"linkClicked\",\n    value: function linkClicked(page) {\n      this.props.onPageLinkClick(page);\n    }\n  }, {\n    key: \"get_paging_info\",\n    value: function get_paging_info() {\n      var _this2 = this; // let pages = Math.ceil(this.props.dataLength / this.props.itemsPerPage);\n\n\n      var pages = this.props.totalPages;\n      var data = []; // let pp =\n      //   this.props.currentPage * this.props.itemsPerPage -\n      //   this.props.itemsPerPage;\n\n      if (this.props.currentPage >= 1 && this.props.currentPage < pages) {\n        data.push(this.props.currentPage);\n        data.push(this.props.currentPage + 1);\n      } else if (this.props.currentPage >= 1 && this.props.currentPage === pages) {\n        data.push(this.props.currentPage);\n      }\n\n      return data.map(function (number) {\n        if (number === _this2.props.currentPage) {\n          return (//   <li\n            _react2.default.createElement(\"button\", {\n              className: \"page-link\",\n              style: {\n                backgroundColor: \"#3b53a2\",\n                color: \"white\"\n              },\n              key: number,\n              id: number,\n              onClick: function onClick() {\n                return _this2.linkClicked(number);\n              }\n            }, number)\n          );\n        } else {\n          return _react2.default.createElement(\"button\", {\n            className: \"page-link\",\n            key: number,\n            id: number,\n            onClick: function onClick() {\n              return _this2.linkClicked(number);\n            }\n          }, number);\n        }\n      });\n    }\n  }, {\n    key: \"renderPageNumbers\",\n    value: function renderPageNumbers() {\n      var _this3 = this; // let pages = Math.ceil(this.props.dataLength / this.props.itemsPerPage);\n\n\n      var pages = this.props.totalPages;\n      var data = [];\n\n      if (this.props.currentPage === 1 && this.props.currentPage < pages) {\n        if (pages === 2) {\n          data.push(this.props.currentPage);\n          data.push(this.props.currentPage + 1);\n        } else {\n          data.push(this.props.currentPage);\n          data.push(this.props.currentPage + 1);\n          data.push(this.props.currentPage + 2);\n        }\n      } else if (this.props.currentPage > 1 && this.props.currentPage < pages) {\n        data.push(this.props.currentPage - 1);\n        data.push(this.props.currentPage);\n        data.push(this.props.currentPage + 1);\n      } else if (this.props.currentPage > 1 && this.props.currentPage === pages) {\n        if (pages === 2) {\n          data.push(this.props.currentPage - 1);\n          data.push(this.props.currentPage);\n        } else {\n          data.push(this.props.currentPage - 2);\n          data.push(this.props.currentPage - 1);\n          data.push(this.props.currentPage);\n        }\n      }\n\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(this.props.totalPages); i++) {\n        pageNumbers.push(i);\n      }\n\n      return data.map(function (number) {\n        if (number === _this3.props.currentPage) {\n          return _react2.default.createElement(\"button\", {\n            className: \"page-link\",\n            style: {\n              backgroundColor: \"#3b53a2\",\n              color: \"white\"\n            },\n            key: number,\n            id: number,\n            onClick: function onClick() {\n              return _this3.linkClicked(number);\n            }\n          }, number);\n        } else {\n          return _react2.default.createElement(\"button\", {\n            className: \"page-link\",\n            key: number,\n            id: number,\n            onClick: function onClick() {\n              return _this3.linkClicked(number);\n            }\n          }, number);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var currentPage = this.props.currentPage;\n      var totalPages = Math.ceil(this.props.totalPages);\n      var prevLinks = currentPage === 1 && totalPages !== 1 || totalPages === 1;\n      var endLinks = currentPage === totalPages && totalPages !== 1 || totalPages === 1;\n\n      if (totalPages === 0) {\n        return \"\";\n      } else {\n        return _react2.default.createElement(\"div\", {\n          className: \"react-bs-table-pagination\",\n          style: {\n            marginTop: 10\n          }\n        }, _react2.default.createElement(\"div\", null, _react2.default.createElement(\"center\", null, _react2.default.createElement(\"div\", {\n          className: \"row\"\n        }, _react2.default.createElement(\"div\", {\n          className: \"col-sm-10\"\n        }, _react2.default.createElement(\"div\", {\n          className: \"pagination pagination-circle pg-purple mb-0\"\n        },\n        /*style={{marginLeft: \"57%\"}}*/\n        !prevLinks ? [_react2.default.createElement(\"button\", {\n          key: \"first\",\n          className: \"page-link\",\n          onClick: function onClick() {\n            return _this4.linkClicked(1);\n          }\n        }, \"First\"), _react2.default.createElement(\"button\", {\n          key: \"prev\",\n          className: \"page-link \",\n          onClick: function onClick() {\n            return _this4.linkClicked(_this4.props.currentPage - 1);\n          }\n        }, _react2.default.createElement(\"span\", {\n          \"aria-hidden\": \"true\"\n        }, \"\\xAB\"), _react2.default.createElement(\"span\", {\n          className: \"sr-only\"\n        }, \"Previous\"))] : null, this.renderPageNumbers(), !endLinks ? [_react2.default.createElement(\"button\", {\n          key: \"next\",\n          className: \"page-link\",\n          onClick: function onClick() {\n            return _this4.linkClicked(_this4.props.currentPage + 1);\n          }\n        }, _react2.default.createElement(\"span\", {\n          \"aria-hidden\": \"true\"\n        }, \"\\xBB\"), _react2.default.createElement(\"span\", {\n          className: \"sr-only\"\n        }, \"Next\")), _react2.default.createElement(\"button\", {\n          key: \"last\",\n          className: \"page-link\",\n          onClick: function onClick() {\n            return _this4.linkClicked(totalPages);\n          }\n        }, \"Last\")] : null))))));\n      }\n    }\n  }]);\n\n  return Pagination;\n}(_react2.default.Component);\n\nexports.default = Pagination;","map":null,"metadata":{},"sourceType":"script"}