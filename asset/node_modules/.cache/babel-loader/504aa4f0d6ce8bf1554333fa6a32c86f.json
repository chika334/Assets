{"ast":null,"code":"import _slicedToArray from \"/home/freshaluck/Downloads/new/askgo/assets/asset/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Register.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { register } from '../actions/authActions';\nimport { clearErrors } from '../actions/errorActions'; // import {\n//   IRegisterModal,\n//   ITarget,\n//   IAuthReduxProps\n// } from '../../types/interfaces';\n\nconst RegisterModal = ({\n  isAuthenticated,\n  error,\n  register,\n  clearErrors\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        msg = _useState10[0],\n        setMsg = _useState10[1];\n\n  const handleToggle = useCallback(() => {\n    // Clear errors\n    clearErrors();\n    setModal(!modal);\n  }, [clearErrors, modal]);\n\n  const handleChangeName = e => setName(e.target.value);\n\n  const handleChangeEmail = e => setEmail(e.target.value);\n\n  const handleChangePassword = e => setPassword(e.target.value);\n\n  const handleOnSubmit = e => {\n    e.preventDefault(); // Create user object\n\n    const user = {\n      name,\n      email,\n      password\n    }; // Attempt to login\n\n    register(user);\n  };\n\n  useEffect(() => {\n    // Check for register error\n    if (error.id === 'REGISTER_FAIL') {\n      setMsg(error.msg.msg);\n    } else {\n      setMsg(null);\n    } // If authenticated, close modal\n\n\n    if (modal) {\n      if (isAuthenticated) {\n        handleToggle();\n      }\n    }\n  }, [error, handleToggle, isAuthenticated, modal]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    onClick: handleToggle,\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Register\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, msg ? React.createElement(Alert, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, msg) : null, React.createElement(Form, {\n    onSubmit: handleOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Name\",\n    className: \"mb-3\",\n    onChange: handleChangeName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email\",\n    className: \"mb-3\",\n    onChange: handleChangeEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    className: \"mb-3\",\n    onChange: handleChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"dark\",\n    style: {\n      marginTop: '2rem'\n    },\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Register\"))))));\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterModal);","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Register.js"],"names":["React","useState","useCallback","useEffect","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","register","clearErrors","RegisterModal","isAuthenticated","error","modal","setModal","name","setName","email","setEmail","password","setPassword","msg","setMsg","handleToggle","handleChangeName","e","target","value","handleChangeEmail","handleChangePassword","handleOnSubmit","preventDefault","user","id","marginTop","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { register } from '../actions/authActions';\nimport { clearErrors } from '../actions/errorActions'\n// import {\n//   IRegisterModal,\n//   ITarget,\n//   IAuthReduxProps\n// } from '../../types/interfaces';\n\nconst RegisterModal = ({\n  isAuthenticated,\n  error,\n  register,\n  clearErrors\n}: IRegisterModal) => {\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState(null);\n\n  const handleToggle = useCallback(() => {\n    // Clear errors\n    clearErrors();\n    setModal(!modal);\n  }, [clearErrors, modal]);\n\n  const handleChangeName = (e: ITarget) => setName(e.target.value);\n  const handleChangeEmail = (e: ITarget) => setEmail(e.target.value);\n  const handleChangePassword = (e: ITarget) => setPassword(e.target.value);\n\n  const handleOnSubmit = (e: any) => {\n    e.preventDefault();\n\n    // Create user object\n    const user = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to login\n    register(user);\n  };\n\n  useEffect(() => {\n    // Check for register error\n    if (error.id === 'REGISTER_FAIL') {\n      setMsg(error.msg.msg);\n    } else {\n      setMsg(null);\n    }\n\n    // If authenticated, close modal\n    if (modal) {\n      if (isAuthenticated) {\n        handleToggle();\n      }\n    }\n  }, [error, handleToggle, isAuthenticated, modal]);\n\n  return (\n    <div>\n      <NavLink onClick={handleToggle} href=\"#\">\n        Register\n      </NavLink>\n\n      <Modal isOpen={modal} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>Register</ModalHeader>\n        <ModalBody>\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n          <Form onSubmit={handleOnSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                className=\"mb-3\"\n                onChange={handleChangeName}\n              />\n\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                className=\"mb-3\"\n                onChange={handleChangeEmail}\n              />\n\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                className=\"mb-3\"\n                onChange={handleChangePassword}\n              />\n              <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                Register\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IAuthReduxProps) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { register, clearErrors })(\n  RegisterModal\n);"]},"metadata":{},"sourceType":"module"}