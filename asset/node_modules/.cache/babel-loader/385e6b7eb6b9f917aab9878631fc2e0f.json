{"ast":null,"code":"var _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Networking.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nexport class Networking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableContent: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    // Don't forget to check if the inputs are corrects\n    // Here i generate a random number for the key propriety that react need\n    let randomID = Math.floor(Math.random() * 999999); // recreate a new object and stock the new line in\n\n    let newTab = this.state.tableContent;\n    newTab.push({\n      key: randomID,\n      title: \"\",\n      amount: \"\" // Don't forget to get the value of the inputs here\n\n    });\n    this.setState({\n      tableContent: newTab\n    }); // Clear the content of the inputs\n    // the state has changed, so the tab is updated.\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    const _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          user = _this$props$auth.user;\n    const admin = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"amount\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"add\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add item\"));\n    return React.createElement(\"section\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Network Department\")), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Finances\"), isAuthenticated && user.isAdmin ? admin : console.log('bad'), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Items\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Department Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Asset\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Unique Id\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.tableContent.map(item => React.createElement(\"tr\", {\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, item.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, item.amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))))))));\n  }\n\n}\nNetworking.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Networking);","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Networking.js"],"names":["React","Component","Table","PropTypes","connect","Networking","constructor","props","state","tableContent","handleChange","bind","handleClick","randomID","Math","floor","random","newTab","push","key","title","amount","setState","event","target","name","value","render","auth","isAuthenticated","user","admin","isAdmin","console","log","map","item","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Table } from 'react-bootstrap'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nexport class Networking extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tableContent: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  }\n\n  handleClick() {\n    // Don't forget to check if the inputs are corrects\n\n    // Here i generate a random number for the key propriety that react need\n    let randomID = Math.floor(Math.random() * 999999);\n\n    // recreate a new object and stock the new line in\n    let newTab = this.state.tableContent;\n    newTab.push({\n      key: randomID,\n      title: \"\",\n      amount: \"\" // Don't forget to get the value of the inputs here\n    });\n\n    this.setState({\n      tableContent: newTab\n    });\n\n    // Clear the content of the inputs\n\n    // the state has changed, so the tab is updated.\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const admin = (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n\n        <label htmlFor=\"amount\">Amount</label>\n        <input type=\"text\" name=\"amount\" onChange={this.handleChange} />\n\n        <button type=\"button\" id=\"add\" onClick={this.handleClick}>Add item</button>\n      </form>\n    )\n    return (\n      <section className=\"App\">\n        <header>\n          <h1>Network Department</h1>\n        </header>\n\n        <section>\n          <h1>Finances</h1>\n          {/* <form>\n            <label htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"text\" name=\"amount\" onChange={this.handleChange} />\n\n            <button type=\"button\" id=\"add\" onClick={this.handleClick}>Add item</button>\n          </form> */}\n          {\n            isAuthenticated && user.isAdmin ? admin : console.log('bad')\n          }\n\n          <section>\n            <h1>Items</h1>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Department Name</th>\n                  <th>Asset</th>\n                  <th>Unique Id</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.tableContent.map((item) =>\n                  <tr key={item.key}>\n                    <td>{item.title}</td>\n                    <td>{item.amount}</td>\n                    {/* <td> */}\n                    {/* Here add the onClick for the action \"remove it\" on the span */}\n                    {/* <span>Remove it</span> */}\n                    {/* </td> */}\n                    <td></td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          </section>\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(Networking)\n"]},"metadata":{},"sourceType":"module"}