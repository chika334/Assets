{"ast":null,"code":"var _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/hoc/auth.js\";\nimport React, { useEffect } from 'react';\nimport { auth } from '../actions/userActions';\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function (ComposedClass, reload, adminRoute = null) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(auth()).then(async response => {\n        console.log(response); // if (await !response.payload.isAuth) {\n        //     if (reload) {\n        //         props.history.push('/login')\n        //     }\n        // } else {\n        //     if (adminRoute && !response.payload.isAdmin) {\n        //         props.history.push('/')\n        //     }\n        //     else {\n        //         if (reload === false) {\n        //             props.history.push('/')\n        //         }\n        //     }\n        // }\n      });\n    }, [dispatch, props.history, user.googleAuth]);\n    return React.createElement(ComposedClass, Object.assign({}, props, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  return AuthenticationCheck;\n}","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/hoc/auth.js"],"names":["React","useEffect","auth","useSelector","useDispatch","ComposedClass","reload","adminRoute","AuthenticationCheck","props","user","state","dispatch","then","response","console","log","history","googleAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,UAAUC,aAAV,EAAyBC,MAAzB,EAAiCC,UAAU,GAAG,IAA9C,EAAoD;AAC/D,WAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAEhC,QAAIC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAtB;AACA,UAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,IAAAA,SAAS,CAAC,MAAM;AAEZW,MAAAA,QAAQ,CAACV,IAAI,EAAL,CAAR,CAAiBW,IAAjB,CAAsB,MAAMC,QAAN,IAAkB;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADoC,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAhBD;AAkBH,KApBQ,EAoBN,CAACF,QAAD,EAAWH,KAAK,CAACQ,OAAjB,EAA0BP,IAAI,CAACQ,UAA/B,CApBM,CAAT;AAsBA,WACI,oBAAC,aAAD,oBAAmBT,KAAnB;AAA0B,MAAA,IAAI,EAAEC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AACD,SAAOF,mBAAP;AACH","sourcesContent":["import React, { useEffect } from 'react';\nimport { auth } from '../actions/userActions'\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                console.log(response)\n                // if (await !response.payload.isAuth) {\n                //     if (reload) {\n                //         props.history.push('/login')\n                //     }\n                // } else {\n                //     if (adminRoute && !response.payload.isAdmin) {\n                //         props.history.push('/')\n                //     }\n                //     else {\n                //         if (reload === false) {\n                //             props.history.push('/')\n                //         }\n                //     }\n                // }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n"]},"metadata":{},"sourceType":"module"}