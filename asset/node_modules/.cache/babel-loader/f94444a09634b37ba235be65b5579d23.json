{"ast":null,"code":"var _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Networking.js\";\nimport React, { Component } from 'react';\nimport { Table, Container } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nexport class Networking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // DepartmentName: '',\n      Asset: '',\n      UniqueId: '',\n      tableContent: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    let server = \"http://localhost:5000\";\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    let tableContent = [...this.state.tableContent];\n    tableContent.push({\n      UniqueId: this.state.UniqueId,\n      Asset: this.state.Asset\n    });\n    this.setState({\n      tableContent,\n      UniqueId: '',\n      Asset: ''\n    }); // Don't forget to check if the inputs are corrects\n    // Here i generate a random number for the key propriety that react need\n    // let randomID = Math.floor(Math.random() * 999999);\n    // recreate a new object and stock the new line in\n    // let newTab = this.state.tableContent;\n    // newTab.push({\n    //   key: randomID,\n    //   title: \"\",\n    //   amount: \"\" // Don't forget to get the value of the inputs here\n    // });\n    // this.setState({\n    //   tableContent: newTab\n    // });\n    // Clear the content of the inputs\n    // the state has changed, so the tab is updated.\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    const _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          user = _this$props$auth.user;\n    const admin = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"Asset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Asset\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Asset\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"UniqueId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Unique Id\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"UniqueId\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"add\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Add item\"));\n    return React.createElement(\"section\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Network Department\")), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, isAuthenticated && user.isAdmin ? admin : console.log('bad')), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Department Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Asset\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Unique Id\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.tableContent.map(item => React.createElement(\"tr\", {\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, item.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, item.amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))))))));\n  }\n\n}\nNetworking.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Networking);","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Networking.js"],"names":["React","Component","Table","Container","PropTypes","connect","io","Networking","constructor","props","state","Asset","UniqueId","tableContent","handleChange","bind","handleClick","componentDidMount","server","e","preventDefault","push","setState","event","target","name","value","render","auth","isAuthenticated","user","admin","isAdmin","console","log","map","item","key","title","amount","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Table, Container } from 'react-bootstrap'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\n\nexport class Networking extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      // DepartmentName: '',\n      Asset: '',\n      UniqueId: '',\n      tableContent: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  }\n\n  componentDidMount() {\n    let server = \"http://localhost:5000\"\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    let tableContent = [...this.state.tableContent];\n\n    tableContent.push({\n      UniqueId: this.state.UniqueId,\n      Asset: this.state.Asset\n    })\n\n    this.setState({\n      tableContent,\n      UniqueId: '',\n      Asset: ''\n    })\n    // Don't forget to check if the inputs are corrects\n\n    // Here i generate a random number for the key propriety that react need\n    // let randomID = Math.floor(Math.random() * 999999);\n\n    // recreate a new object and stock the new line in\n    // let newTab = this.state.tableContent;\n    // newTab.push({\n    //   key: randomID,\n    //   title: \"\",\n    //   amount: \"\" // Don't forget to get the value of the inputs here\n    // });\n\n    // this.setState({\n    //   tableContent: newTab\n    // });\n\n    // Clear the content of the inputs\n\n    // the state has changed, so the tab is updated.\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const admin = (\n      <form>\n        {/* <label htmlFor=\"DepartmentName\">Department Name</label>\n        <input type=\"text\" name=\"DepartmentName\" onChange={this.handleChange} /> */}\n\n        <label htmlFor=\"Asset\">Asset</label>\n        <input type=\"text\" name=\"Asset\" onChange={this.handleChange} />\n\n        <label htmlFor=\"UniqueId\">Unique Id</label>\n        <input type=\"text\" name=\"UniqueId\" onChange={this.handleChange} />\n\n        <button type=\"button\" id=\"add\" onClick={this.handleClick}>Add item</button>\n      </form>\n    )\n    return (\n      <section className=\"App\">\n        <header>\n          <h1>Network Department</h1>\n        </header>\n\n        <section>\n          <Container>\n            {\n              isAuthenticated && user.isAdmin ? admin : console.log('bad')\n            }\n          </Container>\n\n          <section>\n            <Container>\n\n              {/* <h1>Items</h1> */}\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Department Name</th>\n                    <th>Asset</th>\n                    <th>Unique Id</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.tableContent.map((item) =>\n                    <tr key={item.key}>\n                      <td>{item.title}</td>\n                      <td>{item.amount}</td>\n                      {/* <td> */}\n                      {/* Here add the onClick for the action \"remove it\" on the span */}\n                      {/* <span>Remove it</span> */}\n                      {/* </td> */}\n                      <td></td>\n                    </tr>\n                  )}\n                </tbody>\n              </Table>\n            </Container>\n          </section>\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(Networking)\n"]},"metadata":{},"sourceType":"module"}