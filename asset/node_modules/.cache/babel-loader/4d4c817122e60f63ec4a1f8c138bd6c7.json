{"ast":null,"code":"import _defineProperty from \"/home/freshaluck/Downloads/new/askgo/assets/asset/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ITEMS, ADD_ITEM, ITEMS_LOADING } from '../actions/types';\nconst initialState = {\n  items: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return _objectSpread({}, state, {\n        items: action.payload,\n        loading: false\n      });\n\n    case ADD_ITEM:\n      return _objectSpread({}, state, {\n        items: [console.log(action.payload), ...state.items]\n      });\n\n    case ITEMS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/reducers/itemReducers.js"],"names":["GET_ITEMS","ADD_ITEM","ITEMS_LOADING","initialState","items","loading","state","action","type","payload","console","log"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,aAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFhB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKJ,QAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,KAAK,EAAE,CAACM,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB,CAAD,EAA8B,GAAGH,KAAK,CAACF,KAAvC;AAFT;;AAIF,SAAKF,aAAL;AACE,+BACKI,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOC,KAAP;AAlBJ;AAoBD","sourcesContent":["import {\n  GET_ITEMS,\n  ADD_ITEM,\n  ITEMS_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  items: [],\n  loading: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [console.log(action.payload), ...state.items],\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}