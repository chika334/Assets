{"ast":null,"code":"import _defineProperty from \"/home/freshaluck/Downloads/new/askgo/assets/asset/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport images from '../images/images.jpeg'; // import side from '../images/side.png';\n\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { Alert } from 'react-bootstrap';\nimport { clearErrors } from '../actions/errorActions';\n\nconst showTable = props => React.createElement(\"option\", {\n  value: props.table.departmentName,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, props.table.departmentName);\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.SendRedirect = () => {\n      this.props.clearErrors();\n    };\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      msg: null,\n      tableArray: [],\n      department: '',\n      redirect: false,\n      formErrors: {\n        firstname: '',\n        lastname: '',\n        email: \"\",\n        password: \"\"\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.post('http://localhost:5000/api/department').then(department => {\n      console.log(department);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getTables() {\n    return this.state.tableArray.map((currentdepartment, id) => {\n      return React.createElement(\"showTable\", {\n        department: currentdepartment,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // if authenticated redirect \n\n\n    if (isAuthenticated) {\n      this.setState({\n        redirect: true\n      });\n      this.SendRedirect();\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          firstname = _this$state.firstname,\n          lastname = _this$state.lastname,\n          email = _this$state.email,\n          password = _this$state.password; // User object\n\n    const newUser = {\n      firstname,\n      lastname,\n      email,\n      password\n    }; // Attempt to register\n\n    this.props.register(newUser);\n  }\n\n  onChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    let formErrors = _objectSpread({}, this.state.formErrors);\n\n    switch (name) {\n      case \"firstname\":\n        formErrors.firstname = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n\n      case \"lastname\":\n        formErrors.lastname = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n\n      case \"email\":\n        formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n        break;\n\n      case \"password\":\n        formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    });\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: images,\n      className: \"backside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Create Account\"), this.state.msg ? React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      placeholder: \"First name\",\n      type: \"firstname\",\n      name: \"firstname\",\n      noValidate: true,\n      value: this.state.firstname,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), formErrors.firstname.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, formErrors.firstname)), React.createElement(\"div\", {\n      className: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      placeholder: \"Last name\",\n      type: \"lastname\",\n      name: \"lastname\",\n      noValidate: true,\n      value: this.state.lastname,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), formErrors.lastname.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, formErrors.lastname)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"dep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Select Department\"), React.createElement(\"select\", {\n      name: \"department\",\n      className: \"dep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.getTables()), formErrors.lastname.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, formErrors.lastname)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Register\"))))));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(Register);","map":{"version":3,"sources":["/home/freshaluck/Downloads/new/askgo/assets/asset/src/pages/Register.js"],"names":["React","Component","images","Redirect","connect","PropTypes","register","Alert","clearErrors","showTable","props","table","departmentName","emailRegex","RegExp","Register","constructor","SendRedirect","state","firstname","lastname","email","password","msg","tableArray","department","redirect","formErrors","onChange","bind","onSubmit","componentDidMount","axios","post","then","console","log","catch","err","getTables","map","currentdepartment","id","componentDidUpdate","prevProps","error","isAuthenticated","setState","e","preventDefault","newUser","target","name","value","length","test","render","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CACA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAChB;AAAQ,EAAA,KAAK,EAAEA,KAAK,CAACC,KAAN,CAAYC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4CF,KAAK,CAACC,KAAN,CAAYC,cAAxD,CADF;;AAIA,MAAMC,UAAU,GAAGC,MAAM,CACvB,sEADuB,CAAzB;;AAIA,MAAMC,QAAN,SAAuBd,SAAvB,CAAiC;AAE/Be,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgEnBO,YAhEmB,GAgEJ,MAAM;AACnB,WAAKP,KAAL,CAAWF,WAAX;AACD,KAlEkB;;AAGjB,SAAKU,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,GAAG,EAAE,IALM;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXC,MAAAA,QAAQ,EAAE,KARC;AASXC,MAAAA,UAAU,EAAE;AACVR,QAAAA,SAAS,EAAE,EADD;AAEVC,QAAAA,QAAQ,EAAE,EAFA;AAGVC,QAAAA,KAAK,EAAE,EAHG;AAIVC,QAAAA,QAAQ,EAAE;AAJA;AATD,KAAb;AAgBA,SAAKM,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACC,IAAN,CAAW,sCAAX,EACGC,IADH,CACQT,UAAU,IAAI;AAClBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACD,KAHH,EAIGY,KAJH,CAISC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KANH;AAOD;;AAEDC,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKrB,KAAL,CAAWM,UAAX,CAAsBgB,GAAtB,CAA0B,CAACC,iBAAD,EAAoBC,EAApB,KAA2B;AAC1D,aAAO;AAAW,QAAA,UAAU,EAAED,iBAAvB;AAA0C,QAAA,GAAG,EAAEC,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD;;AASDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAA,wBACO,KAAKlC,KADZ;AAAA,UACpBmC,KADoB,eACpBA,KADoB;AAAA,UACbC,eADa,eACbA,eADa;;AAE5B,QAAID,KAAK,KAAKD,SAAS,CAACC,KAAxB,EAA+B;AAC7B;AACA,UAAIA,KAAK,CAACH,EAAN,KAAa,eAAjB,EAAkC;AAChC,aAAKK,QAAL,CAAc;AAAExB,UAAAA,GAAG,EAAEsB,KAAK,CAACtB,GAAN,CAAUA;AAAjB,SAAd;AACD,OAFD,MAEO;AACL,aAAKwB,QAAL,CAAc;AAAExB,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;AACF,KAT2B,CAW5B;;;AACA,QAAIuB,eAAJ,EAAqB;AACnB,WAAKC,QAAL,CAAc;AAAErB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKT,YAAL;AACD;AACF;;AAMDa,EAAAA,QAAQ,CAACkB,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACC,cAAF;AADU,wBAEuC,KAAK/B,KAF5C;AAAA,UAEFC,SAFE,eAEFA,SAFE;AAAA,UAESC,QAFT,eAESA,QAFT;AAAA,UAEmBC,KAFnB,eAEmBA,KAFnB;AAAA,UAE0BC,QAF1B,eAE0BA,QAF1B,EAIV;;AACA,UAAM4B,OAAO,GAAG;AACd/B,MAAAA,SADc;AAEdC,MAAAA,QAFc;AAGdC,MAAAA,KAHc;AAIdC,MAAAA;AAJc,KAAhB,CALU,CAYV;;AACA,SAAKZ,KAAL,CAAWJ,QAAX,CAAoB4C,OAApB;AACD;;AAEDtB,EAAAA,QAAQ,CAACoB,CAAD,EAAI;AAAA,sBACcA,CAAC,CAACG,MADhB;AAAA,UACFC,IADE,aACFA,IADE;AAAA,UACIC,KADJ,aACIA,KADJ;;AAEV,QAAI1B,UAAU,qBAAQ,KAAKT,KAAL,CAAWS,UAAnB,CAAd;;AAEA,YAAQyB,IAAR;AACE,WAAK,WAAL;AACEzB,QAAAA,UAAU,CAACR,SAAX,GACEkC,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEA;;AACF,WAAK,UAAL;AACE3B,QAAAA,UAAU,CAACP,QAAX,GACEiC,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEA;;AACF,WAAK,OAAL;AACE3B,QAAAA,UAAU,CAACN,KAAX,GAAmBR,UAAU,CAAC0C,IAAX,CAAgBF,KAAhB,IACf,EADe,GAEf,uBAFJ;AAGA;;AACF,WAAK,UAAL;AACE1B,QAAAA,UAAU,CAACL,QAAX,GACE+B,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEA;;AACF;AACE;AAnBJ;;AAqBA,SAAKP,QAAL,CAAc;AAAEpB,MAAAA,UAAF;AAAc,OAACyB,IAAD,GAAQC;AAAtB,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACC7B,UADD,GACgB,KAAKT,KADrB,CACCS,UADD;;AAEP,QAAI,KAAKT,KAAL,CAAWQ,QAAf,EAAyB;AACvB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,0CACE;AAAK,MAAA,GAAG,EAAExB,MAAV;AAAkB,MAAA,SAAS,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEG,KAAKgB,KAAL,CAAWK,GAAX,GAAiB,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKL,KAAL,CAAWK,GAApC,CAAjB,GAAoE,IAFvE,EAGE;AAAM,MAAA,QAAQ,EAAE,KAAKO,QAArB;AAA+B,MAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,SALpB;AAME,MAAA,QAAQ,EAAE,KAAKS,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUGD,UAAU,CAACR,SAAX,CAAqBmC,MAArB,GAA8B,CAA9B,IACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC3B,UAAU,CAACR,SAA3C,CAXJ,CADF,EAeE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,MAAA,WAAW,EAAC,WADd;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,QALpB;AAME,MAAA,QAAQ,EAAE,KAAKQ,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUGD,UAAU,CAACP,QAAX,CAAoBkC,MAApB,GAA6B,CAA7B,IACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC3B,UAAU,CAACP,QAA3C,CAXJ,CAfF,EA6BE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KALpB;AAME,MAAA,QAAQ,EAAE,KAAKO,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUGD,UAAU,CAACN,KAAX,CAAiBiC,MAAjB,GAA0B,CAA1B,IACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC3B,UAAU,CAACN,KAA3C,CAXJ,CA7BF,EA2CE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,QALpB;AAME,MAAA,QAAQ,EAAE,KAAKM,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUGD,UAAU,CAACL,QAAX,CAAoBgC,MAApB,GAA6B,CAA7B,IACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC3B,UAAU,CAACL,QAA3C,CAXJ,CA3CF,EAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,SAAS,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKiB,SAAL,EALH,CAFF,EASGZ,UAAU,CAACP,QAAX,CAAoBkC,MAApB,GAA6B,CAA7B,IACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC3B,UAAU,CAACP,QAA3C,CAVJ,CAzDF,EAsEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAtEF,CAHF,CADF,CAFF,CADF;AAqFD;;AA5M8B;;AAA3BL,Q,CAyCG0C,S,GAAY;AACjBX,EAAAA,eAAe,EAAEzC,SAAS,CAACqD,IADV;AAEjBb,EAAAA,KAAK,EAAExC,SAAS,CAACsD,MAAV,CAAiBC,UAFP;AAGjBtD,EAAAA,QAAQ,EAAED,SAAS,CAACwD,IAAV,CAAeD,UAHR;AAIjBpD,EAAAA,WAAW,EAAEH,SAAS,CAACwD,IAAV,CAAeD;AAJX,C;;AAsKrB,MAAME,eAAe,GAAG5C,KAAK,KAAK;AAChC4B,EAAAA,eAAe,EAAE5B,KAAK,CAAC6C,IAAN,CAAWjB,eADI;AAEhCD,EAAAA,KAAK,EAAE3B,KAAK,CAAC2B;AAFmB,CAAL,CAA7B;;AAKA,eAAezC,OAAO,CAAC0D,eAAD,EAAkB;AAAExD,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAlB,CAAP,CAAoDO,QAApD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport images from '../images/images.jpeg';\n// import side from '../images/side.png';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { Alert } from 'react-bootstrap';\nimport { clearErrors } from '../actions/errorActions'\n\nconst showTable = (props) => (\n  <option value={props.table.departmentName}>{props.table.departmentName}</option>\n)\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nclass Register extends Component {\n  userData;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      msg: null,\n      tableArray: [],\n      department: '',\n      redirect: false,\n      formErrors: {\n        firstname: '',\n        lastname: '',\n        email: \"\",\n        password: \"\"\n      }\n    };\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    axios.post('http://localhost:5000/api/department')\n      .then(department => {\n        console.log(department)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  getTables() {\n    return this.state.tableArray.map((currentdepartment, id) => {\n      return <showTable department={currentdepartment} key={id} />\n    })\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  }\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg })\n      } else {\n        this.setState({ msg: null })\n      }\n    }\n\n    // if authenticated redirect \n    if (isAuthenticated) {\n      this.setState({ redirect: true });\n      this.SendRedirect()\n    }\n  }\n\n  SendRedirect = () => {\n    this.props.clearErrors()\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { firstname, lastname, email, password } = this.state;\n\n    // User object\n    const newUser = {\n      firstname,\n      lastname,\n      email,\n      password\n    }\n\n    // Attempt to register\n    this.props.register(newUser);\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"firstname\":\n        formErrors.firstname =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      case \"lastname\":\n        formErrors.lastname =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n    if (this.state.redirect) {\n      return <Redirect to='/profile' />\n    }\n    return (\n      <>\n        <img src={images} className=\"backside\" />\n        <div className=\"wrapper\">\n          <div className=\"form-wrapper\">\n            <h1>Create Account</h1>\n            {this.state.msg ? <Alert variant=\"danger\">{this.state.msg}</Alert> : null}\n            <form onSubmit={this.onSubmit} noValidate>\n              <div className=\"firstname\">\n                <label htmlFor=\"firstname\">First name</label>\n                <input\n                  placeholder=\"First name\"\n                  type=\"firstname\"\n                  name=\"firstname\"\n                  noValidate\n                  value={this.state.firstname}\n                  onChange={this.onChange}\n                />\n                {formErrors.firstname.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.firstname}</span>\n                )}\n              </div>\n              <div className=\"lastname\">\n                <label htmlFor=\"lastname\">Last name</label>\n                <input\n                  placeholder=\"Last name\"\n                  type=\"lastname\"\n                  name=\"lastname\"\n                  noValidate\n                  value={this.state.lastname}\n                  onChange={this.onChange}\n                />\n                {formErrors.lastname.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.lastname}</span>\n                )}\n              </div>\n              <div className=\"email\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  noValidate\n                  value={this.state.email}\n                  onChange={this.onChange}\n                />\n                {formErrors.email.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.email}</span>\n                )}\n              </div>\n              <div className=\"password\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  noValidate\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                {formErrors.password.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.password}</span>\n                )}\n              </div>\n              <div >\n                <label htmlFor=\"dep\">Select Department</label>\n                <select name=\"department\" className=\"dep\">\n                  {/* <option>Select Department</option>\n                  <option value=\"Networking\">Networking Department</option>\n                  <option value=\"Software\">Software Department</option>\n                  <option value=\"Hardware\">Hardware Department</option> */}\n                  {this.getTables()}\n                </select>\n                {formErrors.lastname.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.lastname}</span>\n                )}\n              </div>\n              <div className=\"createAccount\">\n                <button type=\"submit\">Register</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n})\n\nexport default connect(mapStateToProps, { register, clearErrors })(Register);"]},"metadata":{},"sourceType":"module"}